/* Question Set 1 - Easy */

/* Q1: Who is the senior most employee based on job title? */

select * from employee
order by levels desc
limit 1


/* Q2: Which countries have the most Invoices? */

select billing_country, count(*) as count 
from invoice
group by billing_country
order by count desc



/* Q3: What are top 3 values of total invoice? */

select  * from invoice
order by total desc
limit 3


/* Q4: Which city has the best customers? We would like to throw a promotional Music Festival in the city we made the most money. 
Write a query that returns one city that has the highest sum of invoice totals. 
Return both the city name & sum of all invoice totals */

select billing_city, billing_country,  sum(total) as inv_total
from invoice
group by 1,2
order by 3 desc
limit 3




/* Q5: Who is the best customer? The customer who has spent the most money will be declared the best customer. 
Write a query that returns the person who has spent the most money.*/

select customer_id, first_name, sum(total)
from customer
join invoice 
using (customer_id)
group by 1
order by 3 desc
limit 1


/* Question Set 2 - Moderate */

/* Q1: Write query to return the email, first name, last name, & Genre of all Rock Music listeners. 
Return your list ordered alphabetically by email starting with A. */


with cte as
(select distinct email, first_name, last_name
from customer c
join invoice i on c.customer_id = i.customer_id
join invoice_line il on i.invoice_id = il.invoice_id
where track_id in 
	(select track_id from track tk
	join genre g on tk.genre_id = g.genre_id
	where g.name like 'Rock')
)			
select * from cte
order by email



/* Q2: Let's invite the artists who have written the most rock music in our dataset. 
Write a query that returns the Artist name and total track count of the top 10 rock bands. */

select a.name as artist_name, count(title), g.name
from album2 al
join artist a on al.artist_id = a.artist_id
join track t on al.album_id = t.album_id
join genre g on t.genre_id = g.genre_id
where g.name like 'Rock'
group by 1,3
order by 2 desc
limit 10



/* Q3: Return all the track names that have a song length longer than the average song length. 
Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first. */

select name, milliseconds
from track 
where milliseconds > (select avg(milliseconds) from track)
order by milliseconds desc



/* Question Set 3 - Advance */

/* Q1: Find how much amount spent by each customer on artists? Write a query to return customer name, artist name and total spent */



WITH best_selling_artist AS (
	SELECT artist.artist_id AS artist_id, artist.name AS artist_name, 
	SUM(invoice_line.unit_price*invoice_line.quantity) AS total_sales
	FROM invoice_line
	JOIN track ON track.track_id = invoice_line.track_id
	JOIN album2 ON album2.album_id = track.album_id
	JOIN artist ON artist.artist_id = album2.artist_id
	GROUP BY 1,2
	ORDER BY 3 DESC
	LIMIT 1
)

SELECT c.customer_id, c.first_name, c.last_name, bsa.artist_name, 
SUM(il.unit_price*il.quantity) AS amount_spent
FROM invoice i
JOIN customer c ON c.customer_id = i.customer_id
JOIN invoice_line il ON il.invoice_id = i.invoice_id
JOIN track t ON t.track_id = il.track_id
JOIN album2 alb ON alb.album_id = t.album_id
JOIN best_selling_artist bsa ON bsa.artist_id = alb.artist_id
GROUP BY 1,2,3,4
ORDER BY 5 DESC;





with best_sale_band as
	(
	select ats.artist_id, ats.name, 
	sum(il.unit_price * il.quantity) as total_sales
	from invoice_line il
	join track t on il.track_id = t.track_id
	join album2 al on t.album_id = al.album_id
	join artist ats on al.artist_id = ats.artist_id
	group by 1,2
	order by 3 desc
	limit 1 
	)

select first_name, last_name, bsb.name, 
sum(il.unit_price * il.quantity) as total_sales
from invoice i
join customer c ON c.customer_id = i.customer_id
join invoice_line il ON il.invoice_id = i.invoice_id
join track t ON t.track_id = il.track_id
join album2 alb ON alb.album_id = t.album_id
join best_sale_band as bsb 
on bsb.artist_id = alb.artist_id
group by 1,2,3
order by 4 desc



/* Q2: We want to find out the most popular music Genre for each country. We determine the most popular genre as the genre 
with the highest amount of purchases. Write a query that returns each country along with the top Genre. For countries where 
the maximum number of purchases is shared return all Genres. */


with max_count_sel as
(select count(il.quantity) as purchase_count, g.genre_id, country, g.name, 
row_number() over (partition by country order by count(il.quantity)desc) as row_num
from invoice i
join customer c on i.customer_id = c.customer_id
join invoice_line il on i.invoice_id = il.invoice_id
join track t on il.track_id = t.track_id
join genre g on t.genre_id = g.genre_id

group by 2,3,4
order by 3, 1 desc)


select * from max_count_sel
where row_num = 1



/* Q3: Write a query that determines the customer that has spent the most on music for each country. 
Write a query that returns the country along with the top customer and how much they spent. 
For countries where the top amount spent is shared, provide all customers who spent this amount. */


with max_cust_spend as
(select i.customer_id, first_name, last_name, billing_country, sum(total) as total_spends,
row_number() over (partition by billing_country order by sum(total)desc) as row_num
from invoice i
join customer c on i.customer_id = c.customer_id
join invoice_line il on i.invoice_id = il.invoice_id
group by 1,2,3,4
order by 5 desc, 4 asc)

select * from max_cust_spend
where row_num =1






